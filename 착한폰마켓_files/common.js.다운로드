/**
 * [모든 datepicker에 대한 공통 옵션 설정]
 * @param  {[type]} $this [전체선택 객체]
 * @return {[type]}       [description]
 */
$.datepicker.setDefaults({
  dateFormat: 'yy-mm-dd' //Input Display Format 변경
  ,showOtherMonths: true //빈 공간에 현재월의 앞뒤월의 날짜를 표시
  ,showMonthAfterYear:true //년도 먼저 나오고, 뒤에 월 표시
  ,changeYear: false //콤보박스에서 년 선택 가능
  ,changeMonth: false //콤보박스에서 월 선택 가능
  // ,showOn: "both" //button:버튼을 표시하고,버튼을 눌러야만 달력 표시 ^ both:버튼을 표시하고,버튼을 누르거나 input을 클릭하면 달력 표시
  // ,buttonImage: "http://jqueryui.com/resources/demos/datepicker/images/calendar.gif" //버튼 이미지 경로
  // ,buttonImageOnly: false //기본 버튼의 회색 부분을 없애고, 이미지만 보이게 함
  // ,buttonText: "선택" //버튼에 마우스 갖다 댔을 때 표시되는 텍스트
  ,yearSuffix: "." //달력의 년도 부분 뒤에 붙는 텍스트
  ,monthNamesShort: ['1','2','3','4','5','6','7','8','9','10','11','12'] //달력의 월 부분 텍스트
  ,monthNames: ['1','2','3','4','5','6','7','8','9','10','11','12'] //달력의 월 부분 Tooltip 텍스트
  ,dayNamesMin: ['일','월','화','수','목','금','토'] //달력의 요일 부분 텍스트
  ,dayNames: ['일요일','월요일','화요일','수요일','목요일','금요일','토요일'] //달력의 요일 부분 Tooltip 텍스트
  //,minDate: "-1M" //최소 선택일자(-1D:하루전, -1M:한달전, -1Y:일년전)
  //,maxDate: "+1M" //최대 선택일자(+1D:하루후, -1M:한달후, -1Y:일년후)
});

function close_popup(no){
  $('#popup'+no).remove();
}

function close_popup_today(no){
  $('#popup'+no).remove();
  setCookie('popup_'+no, 'N', 1);
}

function setCookie(name, value, expiredays) {
	var todayDate = new Date();
	todayDate.setDate(todayDate.getDate() + expiredays);
	document.cookie = name + "=" + escape(value) + "; path=/; expires=" + todayDate.toGMTString() + ";"
}

function getCookie(name) {
  var Found = false
  var start, end
  var i = 0

  while(i <= document.cookie.length) {
      start = i
      end = start + name.length

      if(document.cookie.substring(start, end) == name) {
        Found = true
        break
      }
      i++
  }

  if(Found == true) {
  start = end + 1
  end = document.cookie.indexOf(";", start)
    if(end < start)
      end = document.cookie.length
  return document.cookie.substring(start, end)
  }
  return ""
}

function inquiry_popup(type){
  url = '/popup/inquiry/'+type;

  $.ajax( {
    url: url,
    type: 'GET',
    dataType: 'html',
    success:function(data){
      if ($('#sub').length > 0){
        $('#sub').prepend(data);
      }
      if ($('#main').length > 0){
        $('#main').prepend(data);
      }
    },
    error:function(e){
      alert('에러가 발생하였습니다.');
    }
  });
}

function board_form_popup(board_id, no, phone_no, str){
  url = '/board/form/'+board_id;
  if (no) url = url + '/'+no;
  if (phone_no) url = url + '?phone_no='+phone_no;
  if (str){
    if (phone_no){
      url = url + '&default='+str;
    }else{
      url = url + '?default='+str;
    }
  }

  $.ajax( {
    url: url,
    type: 'GET',
    dataType: 'html',
    success:function(data){
      if ($('#sub').length > 0){
        $('#sub').prepend(data);
      }
      if ($('#main').length > 0){
        $('#main').prepend(data);
      }
    },
    error:function(e){
      alert('에러가 발생하였습니다.');
    }
  });
}

function board_detail_popup(board_id, no, str){
  url = '/board/detail/'+board_id+'/'+no;
  if (str) url = url + '?default='+str;

  $.ajax( {
    url: url,
    type: 'GET',
    dataType: 'html',
    success:function(data){
      if ($('#sub').length > 0){
        $('#sub').prepend(data);
      }
      if ($('#main').length > 0){
        $('#main').prepend(data);
      }
    },
    error:function(e){
      alert('에러가 발생하였습니다.');
    }
  });
}

$(document).on('click', '.popup_close', function(){
  $('.popup-wrap').remove();
})


/**
 * [스크랩하기]
 * @param  {[type]} type   [description]
 * @param  {[type]} gul_no [description]
 * @return {[type]}        [description]
 */
function favorite(type, gul_no, $this){
  event.preventDefault();

  var CSRF_TOKEN = $('meta[name="csrf-token"]').attr('content');

  if (gul_no && type){
    $.ajax({
      url: '/favorite',
      type: 'POST',
      dataType:'JSON',
      data: {
        _token:CSRF_TOKEN,
        gul_no:gul_no,
        type:type,
      },
      success: function (data) {
        if (data.result == 'login'){
          msg = data.msg.replace('\\n','\n');
          if (confirm(msg)){
            window.location.href = '/login';
          }
        }else{
          if (data.result == 'create') {
            $this.addClass('on');
          }
          if (data.result == 'delete'){
            $this.removeClass('on');
          }

          if (data.msg) alert(data.msg);
        }
      },
      error : function(jqXHR, ajaxOptions, thrownError){
      }
    });
  }
}
